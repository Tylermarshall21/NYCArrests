[["data-transformation.html", "Chapter 3 Data transformation 3.1 Arrest Data 3.2 Crime Data 3.3 Weather Data", " Chapter 3 Data transformation 3.1 Arrest Data 3.1.1 Data Import - 2021 Data We begin by importing our data source as-is. This will give us a starting point for our data adjustment and cleaning. We save this data as nyc_arrests. nyc_arrests &lt;- read.table(&quot;https://data.cityofnewyork.us/api/views/uip8-fykc/rows.csv?accessType=DOWNLOAD&quot;, header=TRUE, sep=&quot;,&quot;, quote=&#39;&quot;&#39; ) For easier use of the dates associated with the arrests, we will convert these into R-compatible dates. We will also remove several columns not necessary for the analysis. nyc_arrests$ARREST_DATE &lt;- as_date(nyc_arrests$ARREST_DATE, format=&quot;%m/%d/%Y&quot;) nyc_arrests &lt;- nyc_arrests %&gt;% select(-c(New.Georeferenced.Column, X_COORD_CD, Y_COORD_CD)) 3.1.2 Data Import - 2006-2021 Data We now repeat this transformation on our older data. We save this data as nyc_arrests_old. One issue with this dataset is its size. Weighing in at over one Gigabyte, this dataset in its unmodified form takes a very long time to download and modify. As a result, we have decided to utilize a reduced version of this dataset that only includes data starting in 2011. The transformations used to create this historical dataset are seen below: nyc_arrests &lt;- read.table(&quot;D:/Documents/R Projects/Final Project Proposal/NYPD_Arrests_Data__Historic_.csv&quot;, header=TRUE, sep=&quot;,&quot;, quote=&#39;&quot;&#39; ) nyc_arrests &lt;- nyc_arrests %&gt;% select(-c(Lon_Lat, X_COORD_CD, Y_COORD_CD)) nyc_arrests$ARREST_DATE &lt;- as_date(nyc_arrests$ARREST_DATE, format=&quot;%m/%d/%Y&quot;) nyc_arrests &lt;- filter(nyc_arrests, ARREST_DATE &gt; &quot;2010-12-31&quot;) write.csv(nyc_arrests, file=&quot;nyc_arrests_post2010.csv&quot;) We then run a matching set of data transformations. nyc_arrests_old &lt;- read.table(&quot;nyc_arrests_post2010.csv&quot;, header=TRUE, sep=&quot;,&quot;, quote=&#39;&quot;&#39; ) nyc_arrests_old &lt;- nyc_arrests_old %&gt;% select(-c(X)) nyc_arrests_old$ARREST_DATE &lt;- as_date(nyc_arrests_old$ARREST_DATE, format=&quot;%Y-%m-%d&quot;) 3.1.3 Combining Old and New For a lot of our analysis we will want a combined dataset, so we can append the historical data to the 2021 data like so: nyc_arrests_combined &lt;- bind_rows(nyc_arrests, nyc_arrests_old) This is the main dataset we will be using throughout our analysis, but for certain visualizations we will want our data by category of arrest. The transformation to get the data in that form is below. 3.1.4 Aggregating by Category For many of our analyses, it is sensible to aggregate crime by its rough category, like so: nyc_arrests_by_category_year_boro &lt;- ( nyc_arrests_combined %&gt;% drop_na(OFNS_DESC) %&gt;% filter(OFNS_DESC != &quot;&quot;, ARREST_BORO != &quot;&quot;) %&gt;% mutate(ARREST_YEAR = year(ARREST_DATE)) %&gt;% group_by(ARREST_YEAR, OFNS_DESC, ARREST_BORO) %&gt;% summarize(COUNT_OF_ARRESTS = n()) ) 3.2 Crime Data The other dataset that we will be using in our analysis is a dataset looking at crime in New York. This dataset gives aggregated crime numbers for each New York county, and this data is from 2010-2020. We will be using this to compare to arrest levels in our analysis, so we did the following transformation below to get data by borough. # Crime Data Import nyc_crime &lt;- read.table(&quot;https://data.ny.gov/api/views/ca8h-8gjq/rows.csv?accessType=DOWNLOAD&amp;sorting=true&quot;, header=TRUE, sep=&quot;,&quot;, quote=&#39;&quot;&#39; ) nyc_crime &lt;- ( filter(nyc_crime, Region == &quot;New York City&quot;, Year &gt; 2010) %&gt;% select(c(County, Year, Murder, Rape, Aggravated.Assault, Motor.Vehicle.Theft)) %&gt;% mutate(Category = &quot;Crime Reports&quot;) ) 3.3 Weather Data Our weather data was stored in csv files, which we then transformed to form a cleaner data set. In our original dataset, there were some values marked as T, representing precipitation less than 0.01 inches. For the sake of simplicity, we translated Trace precipitation as 0.001. This will show that there was precipitation less than the threshold of 0.01, while not overstating the quantity of rain. For our uses, this will not make the data misleading when presented. On days where equipment malfunctioned, we set the value to NA. # Precipitation Data Import nyc_weather &lt;- read.table(&quot;./Precip_Data.csv&quot;, header=TRUE, sep=&quot;,&quot;, quote=&#39;&quot;&#39; ) nyc_weather &lt;- ( nyc_weather %&gt;% pivot_longer(cols = !Day, names_to = &quot;Month&quot;, values_to = &quot;Precipitation&quot; ) %&gt;% unite(Date, c(Month, Day)) ) nyc_weather$Date &lt;- as_date(nyc_weather$Date, format=&quot;%b.%y_%d&quot;) nyc_temp &lt;- read.table(&quot;./Temp_Data.csv&quot;, header=TRUE, sep=&quot;,&quot;, quote=&#39;&quot;&#39; ) nyc_temp &lt;- ( nyc_temp %&gt;% pivot_longer(cols = !Day, names_to = &quot;Month&quot;, values_to = &quot;Mean_Temperature&quot; ) %&gt;% unite(Date, c(Month, Day)) ) nyc_temp$Date &lt;- as_date(nyc_temp$Date, format=&quot;%b.%y_%d&quot;) nyc_weather &lt;- full_join(nyc_weather, nyc_temp) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
